#ITEM PAGES
#The item pages consist of list of items according to their respective categories along with a
#spinbox which allows users to scroll through selectable quantities with ease without typing
#and a save button which adds selected items to the cart.

def fruits():
 window_fruits = tk.Tk()
 window_fruits.geometry('500x500')
 window_fruits.title("SMALL BASKET - FRUITS")
 window_fruits.configure(background = "light blue")
 photos = [ ]
 image = Image.open("/Users/srihith/Downloads/project_1/project/apples.jpg") 
  photo = ImageTk.PhotoImage(image, master=window_fruits)
 photos.append(photo)
 image = Image.open("/Users/srihith/Downloads/project_1/project/bananas.jpg")
 photo = ImageTk.PhotoImage(image, master=window_fruits)
 photos.append(photo)
 image = Image.open("/Users/srihith/Downloads/project_1/project/oranges.jpg")
 photo = ImageTk.PhotoImage(image, master=window_fruits)
 photos.append(photo)

#CODE FOR SAVE BUTTON:
 def save():
 for i in range(3):
 fruits_qty[i] = int(fruits_qty1[i].get())
 tk.Label(window_fruits, text="Items added to cart", bg = "light blue").grid(row=r+2)

 fruits_qty1 = [0, 0, 0]

 i = 0
 r, c = 0, 0
CODE FOR SPINBOX:
 for item in Fruits:
 tk.Label(window_fruits, image = photos[i], borderwidth=2, relief="groove", width =
 100, height = 100, text = item, bg = "light blue").grid(row = r, column = c)
 fruits_qty1[i] = tk.Spinbox(window_fruits, from_=0, to=10, width=5)
 fruits_qty1[i].grid(row=r, column=c+2)
 fruits_qty1[i].delete(0, 'end')
 fruits_qty1[i].insert(0, fruits_qty[i])
 tk.Label(window_fruits, text=" ", bg = "light blue").grid(row=r+1)
 i += 1
 r += 2
 tk.Button(window_fruits, text = "Save", command=save).grid(row=r+1)
 window_fruits.mainloop()
#SIMILARLY FOR ALL CATEGORIES:

def bakery():
 window_bakery = tk.Tk()
 window_bakery.geometry('500x500')
 window_bakery.title("SMALL BASKET - BAKERY")
 window_bakery.configure(background = "light blue")
 photos = [ ]
 image = Image.open("/Users/srihith/Downloads/project_1/project/bread.jpg")
 photo = ImageTk.PhotoImage(image, master=window_bakery) 
  photos.append(photo)
 image = Image.open("/Users/srihith/Downloads/project_1/project/milk.jpg")
 photo = ImageTk.PhotoImage(image, master=window_bakery)
 photos.append(photo)
 image = Image.open("/Users/srihith/Downloads/project_1/project/eggs.jpg")
 photo = ImageTk.PhotoImage(image, master=window_bakery)
 photos.append(photo)

 def save():
   for i in range(3):
   bakery_qty[i] = int(bakery_qty1[i].get())
   tk.Label(window_bakery, text="Items added to cart", bg = "light blue").grid(row=r+2)
   bakery_qty1 = [0, 0, 0]

   i = 0
   r, c = 0, 0
   for item in Bakery:
   tk.Label(window_bakery, image = photos[i], width = 100, height = 100, borderwidth=2,
   relief="groove", text = item, bg = "light green").grid(row = r, column = c)
   bakery_qty1[i] = tk.Spinbox(window_bakery, from_=0, to=10, width=5)
   bakery_qty1[i].grid(row=r, column=c+2)
   bakery_qty1[i].delete(0, 'end')
   bakery_qty1[i].insert(0, bakery_qty[i])
   tk.Label(window_bakery, text=" ", bg = "light blue").grid(row=r+1)
   i += 1
   r += 2
   tk.Button(window_bakery, text = "Save", command=save).grid(row=r+1)
   window_bakery.mainloop()
   
 def vegetables():

   window_vegetables = tk.Tk()
   window_vegetables.geometry('500x500')
   window_vegetables.title("SMALL BASKET - VEGETABLES")
   window_vegetables.configure(background='light blue')
   photos = [ ]
   image = Image.open("/Users/srihith/Downloads/project_1/project/carrots.jpg")
   photo = ImageTk.PhotoImage(image, master=window_vegetables)
   photos.append(photo)
   image = Image.open("/Users/srihith/Downloads/project_1/project/cucumbers.jpg")
   photo = ImageTk.PhotoImage(image, master=window_vegetables)
   photos.append(photo)
   
    image = Image.open("/Users/srihith/Downloads/project_1/project/potatoes.jpg")
 photo = ImageTk.PhotoImage(image, master=window_vegetables)
 photos.append(photo)
 
 def save():
   for i in range(3):
     vegetables_qty[i] = int(vegetables_qty1[i].get())
     tk.Label(window_vegetables, text="Items added to cart", bg = "light
     blue").grid(row=r+2)

   vegetables_qty1 = [0, 0, 0]
   i=0
   r=c=0
   for item in Vegetables:
     tk.Label(window_vegetables, image = photos[i], borderwidth=2, relief="groove", width
     = 100, height = 100, text = item, bg = "light blue").grid(row = r, column = c)
     vegetables_qty1[i] = tk.Spinbox(window_vegetables, from_=0, to=10, width=5)
     vegetables_qty1[i].grid(row=r, column=c+2)
     vegetables_qty1[i].delete(0, 'end')
     vegetables_qty1[i].insert(0, vegetables_qty[i])
     tk.Label(window_vegetables, text=" ", bg = "light blue").grid(row=r+1)
     i += 1
     r += 2
     tk.Button(window_vegetables, text = "Save", command=save).grid(row=r+1)
    window_vegetables.mainloop()
def chips():
 window_chips = tk.Tk()
 window_chips.geometry('500x500')
 window_chips.title("SMALL BASKET - CHIPS")
 window_chips.configure(background='light blue')
 photos = [ ]
 image = Image.open("/Users/srihith/Downloads/project_1/project/lays.jpg")
 photo = ImageTk.PhotoImage(image, master=window_chips)
 photos.append(photo)
 image = Image.open("/Users/srihiht/Downloads/project_1/project/bingo.jpg")
 photo = ImageTk.PhotoImage(image, master=window_chips)
 photos.append(photo)
 image = Image.open("/Users/srihith/Downloads/project_1/project/kurkure.jpg")
 photo = ImageTk.PhotoImage(image, master=window_chips)
 photos.append(photo) 
 
 
 def save():
   for i in range(3):
     chips_qty[i] = int(chips_qty1[i].get())
   tk.Label(window_chips, text="Items added to cart", bg = "light blue").grid(row=r+2)

   chips_qty1 = [0, 0, 0]
   i = 0
   r, c = 0, 0
   for item in Chips:
   tk.Label(window_chips, image = photos[i], borderwidth=2, relief="groove", width =
   100, height = 100, text = item, bg = "light blue").grid(row = r, column = c)
   chips_qty1[i] = tk.Spinbox(window_chips, from_=0, to=10, width=5)
   chips_qty1[i].grid(row=r, column=c+2)
   chips_qty1[i].delete(0, 'end')
   chips_qty1[i].insert(0, chips_qty[i])
   tk.Label(window_chips, text=" ", bg = "light blue").grid(row=r+1)
   i += 1
   r += 2
   tk.Button(window_chips, text = "Save", command=save).grid(row=r+1)
   window_chips.mainloop()
